using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Fire : MonoBehaviour
{
    //public float speed = 8f;
    // ???? ???? ????
    //private Rigidbody bulletRigidbody;
    // ?????? ?????? ?????????? ????????

    //void Start()
    //{
    // ???? ???????????? Rigidbody ?????????? ???? bulletRigidbody?? ????
    //bulletRigidbody = GetComponent<Rigidbody>();
    // ???????????? ???? = ???? ???? * ???? ????
    //bulletRigidbody.velocity = transform.forward * speed;

    //Destroy(gameObject, 3f);
    //}


    // ?????? ???? ?? ???????? ???????? ??????
    //void OnTriggerEnter(Collider other)
    //{
    // ?????? ?????? ???? ?????????? Spark ?????? ???? ????
    //if(other.tag == "Spark")
    // {
    // ?????? ???? ???????????? PlayerController ???????? ????????
    // RedMonsterController redMonsterController = other.GetComponent<RedMonsterController>();

    // ?????????????? PlayerController ?????????? ???????? ?? ??????????
    //if (redMonsterController != null)
    //{
    // ?????? PlayerController ?????????? Die()?????? ????
    //redMonsterController.Die();

    //}
    //}
    //}

    //void Update()
    //{
    // ?????????? ?????????? ?????????????? ?????? 1?? ?????? ????????
    //transform.Translate(Vector3.forward * 1f);
    //}


    //}

    public float speed;

    public float distance;
    public LayerMask isLayer;


    private void Start()
    {
        Invoke("DestroyFire", 2);

    }

    void Update()
    {
        //RaycastHit2D ray = Physics.Raycast(transform.position, transform.right, distance, isLayer);
        //if(ray.collider != null)
        {

        }

        if (transform.rotation.y == 0)
        {
            transform.Translate(transform.right * speed * Time.deltaTime);
        }
        else
        {
            transform.Translate(transform.right * -1 * speed * Time.deltaTime);
        }

    }

    void DestroyBullet()
    {
        Destroy(gameObject,3f);
    }

    // 트리거 충돌 시 자동으로 실행되는 메서드
    void OnTriggerEnter2D(Collider2D other)
    {
        // 충돌한 상대방 게임 오브젝트가 Player 태그를 가진 경우
        if (other.tag == "Spark")
        {
            // 상대방 게임 오브젝트에서 RedMonsterController 컴포넌트 가져오기
            RedMonsterController redMonsterController = other.GetComponent<RedMonsterController>();

            // 상대방으로부터 RedMonsterController 컴포넌트를 가져오는 데 성공했다면
            if (redMonsterController != null)
            {
                // 상대방 RedMonsterController 컴포넌트의 Die() 메서드 실행
                redMonsterController.Die();
            }
        }
    }
}