using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class GroundScroller : MonoBehaviour
{
    public SpriteRenderer[] tiles;
    public Sprite[] groundImg;
    public float speed;

    void Start()
    {
        temp = tiles[0];
    }

    SpriteRenderer temp;

    void Update()
    {
        for (int i = 0; i < tiles.Length; i++)
        {
            if (-5 >= tiles[i].transform.position.x)
            {
                for (int q = 0; q < tiles.Length; q++)
                {
                    if (temp.transform.position.x < tiles[q].transform.position.x)
                        temp = tiles[q];
                }
                tiles[i].transform.position = new Vector2(temp.transform.position.x + 1, -0.3f);
                tiles[i].sprite = groundImg[Random.Range(0, groundImg.Length)];
            }
        }
        for (int i = 0; i < tiles.Length; i++)
        {
            tiles[i].transform.Translate(new Vector2(-1, 0) * Time.deltaTime * speed);
        }
    }
}

//    public SpriteRenderer[] tiles;
//public Sprite[] groundImg;
//public float speed;

//void Start()
//{
//    temp = tiles[0];
//}
//SpriteRenderer temp;

//void Update()
//{
//    if (GameManager.instance.isPlay)
//    {
//        for (int i = 0; i < tiles.Length; i++)
//        {
//            if (-5 >= tiles[i].transform.position.x)
//            {
//                for (int q = 0; q < tiles.Length; q++)
//                {
//                    if (temp.transform.position.x < tiles[q].transform.position.x)
//                        temp = tiles[q];
//                }
//                tiles[i].transform.position = new Vector2(temp.transform.position.x + 1, tiles[i].transform.position.y);
//                //tiles[i].transform.position.x = temp.transform.position.x;
//                tiles[i].sprite = groundImg[Random.Range(0, groundImg.Length)];
//            }
//        }
//        for (int i = 0; i < tiles.Length; i++)
//        {
//            tiles[i].transform.Translate(new Vector2(-1, 0) * Time.deltaTime * GameManager.instance.gameSpeed);
//        }
//    }

//}
//}

// ?? ??????? ???? ???
// ?? ????? ???? 'Instantiate'(??) ??? ??
// ???? ?? ??? ??? ?
// ???? ??(Object Pulling)?
// ?? ??? ????? ?????? ?? ???
// '?(Pool) : ???'? ???? ????.
// ? ?? ??? ????
// Instantiate() ????? ????? ????? ?????
// Destroy() ????? ????? ????? ???? 
// ??? ??? ?? ????.
// ?? ???? ???? GC(??? ???)???? ??.
// ?? ??? ????? ?? ?? ?????
// ?? ??(???) ??? ??? ???.

// ??? ???? ????? ????? ????

//{
//    // ??? ??? ?? ???
//    public GameObject platformPrefab;
//    // ??? ?? ?
//    public int count = 6;

//    // ?? ????? ?? ?? ???
//    public float timeBetSpawnMin = 1.25f;
//    // ?? ????? ?? ?? ???
//    public float timeBetSpawnMax = 2.25f;
//    //?? ????? ?? ?? 
//    private float timeBetSpawn;

//    // ??? ??? ?? y?
//    public float yMin = -3.5f;
//    // ??? ??? ?? y?
//    public float yMax = 1.5f;
//    // ??? ??? x?
//    private float xPos = 20f;

//    // ?? ??? ???? ??? ??
//    private GameObject[] platforms;
//    // ??? ?? ??? ??
//    private int currentIndex = 0;

//    // ??? ??? ??? ?? ?? ??? ??
//    private Vector2 poolPosition = new Vector2(0, -25);
//    // ??? ?? ??
//    private float lastSpawnTime;


//    void Start()
//    {
//        // ??? ????? ??? ??? ?? ??

//        // count??? ??? ??? ??? ?? ?? ??
//        platforms = new GameObject[count];

//        // count?? ????? ?? ??
//        for (int i = 0; i < count; i++)
//        {
//            // platformPrefab? ???? ? ???
//            // poolPosition??? ?? ??
//            // ??? ??? platforms ??? ??
//            platforms[i] = Instantiate(platformPrefab, poolPosition, Quaternion.identity);


//        }

//        // ??? ?? ?? ???
//        lastSpawnTime = 0f;
//        // ??? ????? ?? ??? ???
//        timeBetSpawn = 0f;

//    }


//    void Update()
//    {
//        // ??? ???? ????? ??? ??

//        // ???? ????? ???? ???.
//        if (GameManager.instance.isGameover) return;

//        //// ??? ?? ???? timeBetSpawn ?? ??? ????,
//        //if (Time.time >= lastSpawnTime + timeBetSpawn)
//        //{
//        //    // ??? ??? ?? ??? ?? ???? ??
//        //    lastSpawnTime = Time.time;

//        //    // ?? ????? ?? ??? timeBetSpawnMin,
//        //    // timeBetSpawnMax ???? ?? ????
//        //    timeBetSpawn = Random.Range(timeBetSpawnMin, timeBetSpawnMax);

//        //    // ??? ??? ??? yMin? yMax ???? ?? ????
//        //    float yPos = Random.Range(yMin, yMax);

//        //    // ??? ?? ??? ?? ?? ????? ?????
//        //    // ?? ?? ?? ??????. ? ?, ??? Platform ?????
//        //    // OnEnable ???? ???
//        //    platforms[currentIndex].SetActive(false);
//        //    platforms[currentIndex].SetActive(true);

//        //    // ?? ??? ??? ?? ???? ???
//        //    platforms[currentIndex].transform.position = new Vector2(xPos, yPos);

//        //    // ?? ???
//        //    currentIndex++;

//        //    // ??? ??? ?????..
//        //    if (currentIndex >= count)
//        //    {
//        //        currentIndex = 0;
//        //    }



//        //}

//    }
//}